---
# User and group
teku_user: teku
teku_group: "{{ teku_user }}"

# Version to install
teku_download_url: "https://bintray.com/consensys/pegasys-repo/download_file?file_path=teku-{{ teku_version }}.tar.gz"

# Directory paths
teku_base_dir: "/opt/teku"
teku_install_dir: "{{ teku_base_dir }}/teku-{{ teku_version }}"
teku_current_dir: "{{ teku_base_dir }}/current"
teku_data_dir: "{{ teku_base_dir }}/data"
teku_data_beacon_dir: "{{ teku_data_dir }}/dir"
teku_config_dir: "/etc/teku"
teku_log_dir: "/var/log/teku"
teku_log4j_config_file: ""
teku_output_transition_dir: "/tmp/teku"
teku_node_private_key_file: ""
teku_config_template: "teku.yml.j2"
besu_profile_file: "/etc/profile.d/teku-path.sh"

# Logging
teku_log_level: INFO
teku_log_color_enabled: False
teku_log_destination: 'DEFAULT_BOTH'
teku_log_filename: "{{ teku_log_dir }}/teku.log"
teku_log_filename_pattern: 'teku_%d{yyyy-MM-dd}.log'
teku_log_include_events_enabled: False

# Managed service config
teku_managed_service: true
teku_systemd_state: restarted
teku_systemd_template: teku.service.j2
teku_systemd_dir: /etc/systemd/system
teku_launchd_template: tech.pegasyseng.teku.plist.j2
teku_launchd_dir: /Library/LaunchAgents

# Teku config
teku_network: minimal
teku_initial_state: ""
teku_host_ip: ""
teku_default_ip: "127.0.0.1"

#node
teku_p2p_enabled: "True"
teku_p2p_interface: 0.0.0.0
teku_p2p_port: 9000
teku_p2p_advertised_port: 9000
teku_p2p_discovery_enabled: "True"

#interop
teku_interop_genesis_time: 0
teku_interop_owned_validator_start_index: 0
teku_interop_owned_validator_count: 64
teku_interop_number_of_validators: 64
teku_interop_enabled: "False"
#validators
teku_validators_key_file: ""
#deposit
teku_deposit_mode: "normal"
teku_deposit_input_file: "" #"validator_test_data.json"
teku_deposit_number_validators: 64
teku_deposit_contract_address: "0x"
teku_deposit_eth1_endpoint: "http://0.0.0.0:8545"

teku_metrics_enabled: "True"
teku_metrics_interface: 0.0.0.0
teku_metrics_host_allowlist: ["*"]
teku_metrics_port: 8008
teku_metrics_categories: []

teku_data_path: "/data"
teku_data_storage_mode: "prune"

teku_beacon_rest_api_port: 5051
teku_beacon_rest_api_docs_enabled: "False"
teku_beacon_rest_api_enabled: "True"
teku_beacon_rest_api_interface: "127.0.0.1"
teku_beacon_rest_api_host_allowlist: ["*"]

teku_cmdline_args: ""
teku_env_opts: ""
# Using an internal variable for setting the configuration. This avoids circular reference.
teku_env_opts_internal: "{{ teku_env_opts }}"
teku_env_opts_beacon: "{{ teku_env_opts }}"
teku_env_opts_validator: "{{ teku_env_opts }}"

teku_validator_key_files: []
teku_validator_key_password_files: []

# internal state to maintain idempotency
teku_state_updates: []
teku_state_updates_validator: []
teku_state_updates_beacon: []

# Defaults for monolith service for backward compatibility
teku_sub_command: ''
teku_log_file: "{{ teku_log_dir }}/teku.log"
teku_config_file: "{{ teku_config_dir }}/teku.yml"

# determine whether to run as standalone validator client. Default is not to run standalone validator
teku_standalone_validator: False

# Configuration for monolith teku client
teku_monolith_service_name: 'teku'
teku_monolith_service_file: "{{ teku_systemd_dir }}/teku.service"
teku_monolith_log_file: "{{ teku_log_dir }}/teku.log"
teku_monolith_config_file: "{{ teku_config_dir }}/teku.yml"

# Configuration for standalone validator client
teku_validator_service_name: 'teku-validator'
teku_validator_service_file: "{{ teku_systemd_dir }}/teku-validator.service"
teku_validator_log_file: "{{ teku_log_dir }}/teku-validator.log"
teku_validator_config_file: "{{ teku_config_dir }}/teku-validator.yml"
teku_validator_metrics_port: '8009'

# Configuration for standalone beacon client
teku_beacon_service_name: 'teku'
teku_beacon_service_file: "{{ teku_systemd_dir }}/teku.service"
teku_beacon_log_file: "{{ teku_log_dir }}/teku.log"
teku_beacon_config_file: "{{ teku_config_dir }}/teku.yml"
teku_beacon_metrics_port: '8008'
