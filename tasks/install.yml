---
- name: install | Ensure Teku group exists
  ansible.builtin.group:
    name: "{{ teku_group }}"
    state: present
  become: true

- name: install | Create Teku user
  ansible.builtin.user:
    comment: Teku client user
    name: "{{ teku_user }}"
    group: "{{ teku_group }}"
  become: true

- name: install | Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  loop:
    - "{{ teku_base_dir }}"
    - "{{ teku_install_dir }}"
    - "{{ teku_config_dir }}"
    - "{{ teku_log_dir }}"
    - "{{ teku_data_dir }}"
    - "{{ teku_validator_data_dir }}"
  become: true

- name: install | Setup logrotate
  ansible.builtin.template:
    src: "logrotate/teku"
    dest: "/etc/logrotate.d/teku"
  become: true

- name: install | Populate service facts
  ansible.builtin.service_facts:

- name: install | Set facts for running Teku services
  ansible.builtin.set_fact:
    teku_beacon_running: "{{ ansible_facts.services['teku-beacon.service'].status == 'enabled' if 'teku-beacon.service' in ansible_facts.services else false }}"
    teku_validator_running: "{{ ansible_facts.services['teku-validator.service'].status == 'enabled' if 'teku-validator.service' in ansible_facts.services else false }}"
    teku_combined_running: "{{ ansible_facts.services['teku.service'].status == 'enabled' if 'teku.service' in ansible_facts.services else false }}"

- name: install | Stop running Teku services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: "stopped"
  become: true
  loop:
    - teku-beacon.service
    - teku-validator.service
    - teku-combined.service
  register: teku_systemd_stopped
  when: (ansible_facts.services[item] is defined) and 
        (ansible_facts.services[item].status == 'enabled')

- name: install | Set updated optionally to trigger a systemd restart at the end - teku_beacon_state_updates
  ansible.builtin.set_fact:
    teku_beacon_state_updates: "{{ teku_beacon_state_updates + ['teku.running_service'] }}"
  when: (item.item == 'teku-beacon.service') and
        (item is defined) and
        (item.state | default('') == "stopped")
  loop: "{{ teku_systemd_stopped.results }}"

- name: install | Set updated optionally to trigger a systemd restart at the end - teku_validator_state_updates
  ansible.builtin.set_fact:
    teku_validator_state_updates: "{{ teku_validator_state_updates + ['teku.running_service'] }}"
  when: (item.item == 'teku-validator.service') and
        (item is defined) and
        (item.state | default('') == "stopped")
  loop: "{{ teku_systemd_stopped.results }}"

- name: install | Set updated optionally to trigger a systemd restart at the end - teku_combined_state_updates
  ansible.builtin.set_fact:
    teku_combined_state_updates: "{{ teku_combined_state_updates + ['teku.running_service'] }}"
  when: (item.item == 'teku.service') and
        (item is defined) and
        (item.state | default('') == "stopped")
  loop: "{{ teku_systemd_stopped.results }}"      

- name: install | Download Teku binary for Teku version {{ _teku_version }}
  ansible.builtin.uri:
    url: "{{ teku_download_url }}"
    dest: "{{ teku_base_dir }}"
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  register: teku_binary_download
  become: true

- name: install | Extract Teku source to install directory
  ansible.builtin.unarchive:
    src: "{{ '/tmp/teku/build/distributions/teku-' + teku_version + '.tar.gz' if teku_build_from_source else teku_download_url }}"
    remote_src: yes
    dest: "{{ teku_install_dir }}"
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
    mode: "0775"
    extra_opts:
      - --strip-components
      - "1"
  become: true
  register: extract_src

- name: install | Create a symlink to current
  ansible.builtin.file:
    src: "{{ teku_install_dir }}/"
    dest: "{{ teku_current_dir }}"
    state: link
  register: create_symlink
  become: true

- name: install | Set updated optionally to trigger a systemd restart at the end
  ansible.builtin.set_fact:
    teku_combined_state_updates: "{{ teku_combined_state_updates + ['teku.install_dir'] }}"
    teku_validator_state_updates: "{{ teku_validator_state_updates + ['teku.install_dir'] }}"
    teku_beacon_state_updates: "{{ teku_beacon_state_updates + ['teku.install_dir'] }}"
  when: >
    extract_src is changed or
    create_symlink is changed
