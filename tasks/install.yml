---
- name: Ensure Teku group exists
  group:
    name: "{{ teku_group }}"
    state: present
  become: true

- name: Create Teku user
  user:
    comment: Teku client user
    name: "{{ teku_user }}"
    group: "{{ teku_group }}"
  become: true

- name: Create base directory
  file:
    path: "{{ teku_base_dir }}"
    state: directory
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  become: true

- name: Create install directory
  file:
    path: "{{ teku_install_dir }}"
    state: directory
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  become: true

- name: Create log directory
  file:
    path: "{{ teku_log_dir }}"
    state: directory
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  become: true

- name: Setup logrotate
  template:
    src: "logrotate/teku"
    dest: "/etc/logrotate.d/teku"
  become: true

- name: Download Teku binary
  ansible.builtin.get_url:
    url: "{{ teku_download_url }}"
    dest: "{{ teku_base_dir }}"
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
  register: teku_binary_download
  become: true

- name: Extract Teku source to install directory
  unarchive:
    src: "{{ teku_binary_download.dest }}"
    dest: "{{ teku_install_dir }}"
    remote_src: true
    owner: "{{ teku_user }}"
    group: "{{ teku_group }}"
    mode: "0775"
    extra_opts:
      - --strip-components
      - "1"
  become: true
  register: extract_src

- name: Create a symlink to current
  file:
    src: "{{ teku_install_dir }}/"
    dest: "{{ teku_current_dir }}"
    state: link
  register: create_symlink
  become: true

- name: Set updated optionally to trigger a systemd restart at the end
  set_fact:
    teku_state_updates: "{{ teku_state_updates + ['teku.install_dir'] }}"
    teku_state_updates_validator: "{{ teku_state_updates_validator + ['teku.install_dir'] }}"
    teku_state_updates_beacon: "{{ teku_state_updates_beacon + ['teku.install_dir'] }}"
  when: "extract_src is changed or create_symlink is changed"
